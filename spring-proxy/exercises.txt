Случайные числа (Java Dynamic Proxy)

1. Создать Proxy, который генерирует случайное число в заданных пределах (отрицательные значения так же возможны)
2. Внедрять каждый раз новое случайное значение
3. Вести статистику какие числа были сгенерированы и их среднее
4. Выводить статистику по запросу

Ненулевые списки в ответе (Spring AOP)

1. Создать аннотацию для возвращения List.of() вместо null, если метод с типом возвращаемого значения возвращает null
2. Создать Aspect для обработки аннотации

Отложенный запуск задач (Bean Post Processor + Java Dynamic Proxy)

1. Создать аннотацию для отложенного запуска задач (java.util.concurrent.Executors#newScheduledThreadPool(int))
2. Вызов метода, помеченного аннотацией, откладывается на значение миллисекунд, указанное в аннотации
3. Ожидается, что аннотация может быть повешена на метод типа void
4. Игнорировать параметры метода
5. (*) Учитывать параметры метода (замыкания и lambda)
6. (*) Интегрироваться с имеющимся бином org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler

@Service
class MyService {

    @Delay(value = 2, units = TimeUnit.SECONDS)
    void action() throws Exception {
        var user = repository.findById(1).get();
        user.setName(....);
        repository.save(user);
    }
}

@Service
class MyService2 {

    @Autowired
    MyService myService;

    void f() throws Exception {
        // реальное выполнение MyService#action откладывается на время указанное в @Delay,
        // при этом не блокируется текущий тред, а выполнение основного потока продолжается
        myService.action();
    }
}
